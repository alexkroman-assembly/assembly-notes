name: Build & Release Assembly Notes

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  # Generate release notes job
  release-notes:
    runs-on: ubuntu-latest
    outputs:
      release-notes: ${{ steps.notes.outputs.release-notes }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release notes
        id: notes
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          CURRENT_TAG=${GITHUB_REF#refs/tags/}

          # Generate release notes from commits
          if [ -n "$PREV_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD)
          else
            COMMITS=$(git log --pretty=format:"- %s")
          fi

          # Create release notes
          RELEASE_NOTES="## What's Changed

          $COMMITS

          **Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...$CURRENT_TAG"

          # Save to output
          echo "release-notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  release:
    needs: release-notes
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build Electron app
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Add these if you plan to code sign (optional)
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/
